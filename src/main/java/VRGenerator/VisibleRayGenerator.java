package VRGenerator;

import cpw.mods.fml.common.*;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkRegistry;
import cpw.mods.fml.common.registry.GameRegistry;
import ic2.api.info.Info;
import ic2.api.item.IC2Items;
import net.minecraft.block.Block;
import net.minecraft.client.Minecraft;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.init.Blocks;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.ChatComponentText;
import net.minecraftforge.common.config.Configuration;

import java.util.Arrays;

@Mod(modid = "VisibleRayGenerator", name = "VisibleRayGenerator", version = "@VERSION@", dependencies = "required-after:IC2", useMetadata = true)
public class VisibleRayGenerator {
    public static boolean isCE;

    public static int LavaUpdateArea = 3;
    public static boolean isSolarCostUp;
    //	public static boolean isICstacksizeUp;
    public static boolean isResistanceVanilla;
    public static Block solarBlock;
    //	public static Block artificiaalSun;
    public static Item lavaUpdater;

    public static int artificialSunGuiID = 0;
    public static String TexDomain = "vrgenerator:";
    @Instance("VisibleRayGenerator")
    public static VisibleRayGenerator instance;
    @SidedProxy(clientSide = "VRGenerator.ClientProxy", serverSide = "VRGenerator.CommonProxy")
    public static CommonProxy proxy;

    public static void addChat(String message) {
        if (FMLCommonHandler.instance().getEffectiveSide().isClient()) {
            Minecraft mc = Minecraft.getMinecraft();
            mc.ingameGUI.getChatGUI().printChatMessage(new ChatComponentText(message));
        }
    }

    public static void addChat(String format, Object... args) {
        addChat(String.format(format, args));
    }

    @EventHandler
    public void preInit(FMLPreInitializationEvent event) {
        setUpModInfo(event.getModMetadata());
        Configuration config = new Configuration(event.getSuggestedConfigurationFile());
        config.load();
        isSolarCostUp = config.get(Configuration.CATEGORY_GENERAL, "isSolarCostUp", true, "Using a capacitor instead of a transformer recipe CE-Solar").getBoolean(true);
        isResistanceVanilla = config.get(Configuration.CATEGORY_GENERAL, "isResistanceVanilla", true, "Set in the vanilla resistance of Obsidian, Water, Lava").getBoolean(true);
        config.save();
        solarBlock = new CESolarBlock().setBlockName("CE_Solar");
        GameRegistry.registerBlock(solarBlock, CESolarItem.class, "visibleraysolor");
        lavaUpdater = new CEItemLavaUpdater().setUnlocalizedName(TexDomain + "CE_LavaUpdater").setTextureName(TexDomain + "CE_LavaUpdater");
        GameRegistry.registerItem(lavaUpdater, "lavaupdater");

        try {
            CreativeTabs tabIC2 = (CreativeTabs) Info.ic2ModInstance.getClass().getField("tabIC2").get(Info.ic2ModInstance);
            solarBlock.setCreativeTab(tabIC2);
            lavaUpdater.setCreativeTab(tabIC2);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setUpModInfo(ModMetadata meta) {
        meta.authorList = Arrays.asList("takanasayo");
        meta.autogenerated = true;
        meta.description = "Add some visible ray energy generator to mc172";
        meta.logoFile = "";
        meta.url = "http://forum.minecraftuser.jp/viewtopic.php?f=13&t=6672";
        meta.credits = "Updated By A.K.";
    }

    @EventHandler
    public void load(FMLInitializationEvent event) {
        NetworkRegistry.INSTANCE.registerGuiHandler(this, proxy);
    }

    @EventHandler
    public void postInit(FMLPostInitializationEvent event) {
        isCE = Loader.isModLoaded("CompactEngine");
        initIC();
        registerRecipesIC();
    }

    public void initIC() {
        GameRegistry.registerTileEntity(CESolarTileEntity.class, "CE_Solar");
        GameRegistry.registerTileEntity(CEGeneratorTileEntity.class, "CE_Generator");

        if (isResistanceVanilla) {
            Blocks.obsidian.setResistance(2000F);
            Blocks.flowing_water.setResistance(500F);
            Blocks.water.setResistance(500F);
            Blocks.lava.setResistance(500F);
        }
    }

    private void registerRecipesIC() {
        ItemStack solar1 = new ItemStack(solarBlock, 1, 0);
        ItemStack solar2 = new ItemStack(solarBlock, 1, 1);
        ItemStack solar3 = new ItemStack(solarBlock, 1, 2);
        ItemStack solar4 = new ItemStack(solarBlock, 1, 3);
/*
        Item.lightStoneDust			//グロウストーンダスト
		Block.glowStone				//グロウストーン
		Block.glass					//ガラス
		Ic2Items.generator;			//地熱発電機
		Ic2Items.coalDust;			//石炭の粉
		Ic2Items.electronicCircuit;	//電子回路
		Ic2Items.advancedCircuit;	//発展回路
		Ic2Items.solarPanel;		//ソーラーパネル
		Ic2Items.batBox;
		Ic2Items.mfeUnit;
		Ic2Items.mfsUnit;
		Ic2Items.lvTransformer;		//低圧変圧器
		Ic2Items.mvTransformer;		//中圧変圧器
		Ic2Items.hvTransformer;		//高圧変圧器
		Ic2Items.energyCrystal;
		Ic2Items.lapotronCrystal;
		Ic2Items.reBattery;
		Ic2Items.treetap;
		Ic2Items.lavaCell;
		Ic2Items.carbonPlate;
		Ic2Items.coalChunk;
		Ic2Items.advancedAlloy;
		Ic2Items.iridiumPlate;
		Ic2Items.advancedMachine;
*/
        GameRegistry.addRecipe(new ItemStack(lavaUpdater), "c", "a", "i",
                'c', IC2Items.getItem("lavaCell"), 'a', IC2Items.getItem("advancedCircuit"), 'i', IC2Items.getItem("plateiron"));
        GameRegistry.addShapelessRecipe(solar1, IC2Items.getItem("solarPanel"), IC2Items.getItem("advancedCircuit"));
        if (isSolarCostUp) {
            GameRegistry.addRecipe(solar2, "sss", "sms", "sss", 's', solar1, 'm', IC2Items.getItem("batBox"));
            GameRegistry.addRecipe(solar3, "sss", "sms", "sss", 's', solar2, 'm', IC2Items.getItem("mfeUnit"));
            GameRegistry.addRecipe(solar4, "sss", "sms", "sss", 's', solar3, 'm', IC2Items.getItem("mfsUnit"));
        } else {
            GameRegistry.addRecipe(solar2, "sss", "sms", "sss", 's', solar1, 'm', IC2Items.getItem("lvTransformer"));
            GameRegistry.addRecipe(solar3, "sss", "sms", "sss", 's', solar2, 'm', IC2Items.getItem("mvTransformer"));
            GameRegistry.addRecipe(solar4, "sss", "sms", "sss", 's', solar3, 'm', IC2Items.getItem("hvTransformer"));
        }

        ItemStack[] rlg = new ItemStack[11];
        rlg[0] = solar1;
        for (int i = 0; i < 10; i++) rlg[i + 1] = new ItemStack(solarBlock, 1, i + 4);
        ItemStack[] items = {
                new ItemStack(Blocks.glowstone)
                , IC2Items.getItem("electronicCircuit")
                , IC2Items.getItem("advancedCircuit")
                , IC2Items.getItem("lvTransformer")
                , IC2Items.getItem("mvTransformer")
                , IC2Items.getItem("hvTransformer")
                , IC2Items.getItem("advancedMachine")
                , IC2Items.getItem("advancedMachine")
                , IC2Items.getItem("advancedMachine")
                , rlg[7]
        };
        ItemStack[] plates = {
                IC2Items.getItem("carbonPlate")
                , IC2Items.getItem("carbonPlate")
                , IC2Items.getItem("carbonPlate")
                , IC2Items.getItem("carbonPlate")
                , IC2Items.getItem("carbonPlate")
                , IC2Items.getItem("advancedAlloy")
                , IC2Items.getItem("advancedAlloy")
                , IC2Items.getItem("iridiumPlate")
                , IC2Items.getItem("iridiumPlate")
                , IC2Items.getItem("iridiumPlate")
        };

        GameRegistry.addRecipe(rlg[5], "psp", "gmg", "psp",
                'p', IC2Items.getItem("coalChunk"), 'g', solar4, 'm', IC2Items.getItem("mvTransformer"), 's', Blocks.glowstone);

        for (int i = 0; i < 10; i++) {
            GameRegistry.addRecipe(rlg[i + 1], "pgp", "gmg", "pgp", 'p', plates[i], 'g', rlg[i], 'm', items[i]);
        }
    }
}